// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-commons/tree/main/paramgen

package pulsar

import (
	"github.com/conduitio/conduit-commons/config"
)

const (
	SourceConfigConnectionTimeout          = "connectionTimeout"
	SourceConfigDisableLogging             = "disableLogging"
	SourceConfigEnableTransaction          = "enableTransaction"
	SourceConfigMaxConnectionsPerBroker    = "maxConnectionsPerBroker"
	SourceConfigMemoryLimitBytes           = "memoryLimitBytes"
	SourceConfigOperationTimeout           = "operationTimeout"
	SourceConfigSubscriptionName           = "subscriptionName"
	SourceConfigTlsAllowInsecureConnection = "tlsAllowInsecureConnection"
	SourceConfigTlsCertificateFile         = "tlsCertificateFile"
	SourceConfigTlsKeyFilePath             = "tlsKeyFilePath"
	SourceConfigTlsTrustCertsFilePath      = "tlsTrustCertsFilePath"
	SourceConfigTlsValidateHostname        = "tlsValidateHostname"
	SourceConfigTopic                      = "topic"
	SourceConfigUrl                        = "url"
)

func (SourceConfig) Parameters() map[string]config.Parameter {
	return map[string]config.Parameter{
		SourceConfigConnectionTimeout: {
			Default:     "",
			Description: "ConnectionTimeout specifies the duration for which the client will\nattempt to establish a connection before timing out.",
			Type:        config.ParameterTypeDuration,
			Validations: []config.Validation{},
		},
		SourceConfigDisableLogging: {
			Default:     "",
			Description: "DisableLogging disables pulsar client logs",
			Type:        config.ParameterTypeBool,
			Validations: []config.Validation{},
		},
		SourceConfigEnableTransaction: {
			Default:     "",
			Description: "EnableTransaction determines if the client should support transactions.",
			Type:        config.ParameterTypeBool,
			Validations: []config.Validation{},
		},
		SourceConfigMaxConnectionsPerBroker: {
			Default:     "",
			Description: "MaxConnectionsPerBroker limits the number of connections to each broker.",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		SourceConfigMemoryLimitBytes: {
			Default:     "",
			Description: "MemoryLimitBytes sets the memory limit for the client in bytes.\nIf the limit is exceeded, the client may start to block or fail operations.",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		SourceConfigOperationTimeout: {
			Default:     "",
			Description: "OperationTimeout is the duration after which an operation is considered\nto have timed out.",
			Type:        config.ParameterTypeDuration,
			Validations: []config.Validation{},
		},
		SourceConfigSubscriptionName: {
			Default:     "",
			Description: "SubscriptionName is the name of the subscription to be used for\nconsuming messages.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		SourceConfigTlsAllowInsecureConnection: {
			Default:     "",
			Description: "TLSAllowInsecureConnection configures whether the internal Pulsar client accepts untrusted TLS certificate from broker (default: false)",
			Type:        config.ParameterTypeBool,
			Validations: []config.Validation{},
		},
		SourceConfigTlsCertificateFile: {
			Default:     "",
			Description: "TLSCertificateFile sets the path to the TLS certificate file",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		SourceConfigTlsKeyFilePath: {
			Default:     "",
			Description: "TLSKeyFilePath sets the path to the TLS key file",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		SourceConfigTlsTrustCertsFilePath: {
			Default:     "",
			Description: "TLSTrustCertsFilePath sets the path to the trusted TLS certificate file",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		SourceConfigTlsValidateHostname: {
			Default:     "",
			Description: "TLSValidateHostname configures whether the Pulsar client verifies the validity of the host name from broker (default: false)",
			Type:        config.ParameterTypeBool,
			Validations: []config.Validation{},
		},
		SourceConfigTopic: {
			Default:     "",
			Description: "Topic specifies the Pulsar topic used by the connector.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		SourceConfigUrl: {
			Default:     "",
			Description: "URL of the Pulsar instance to connect to.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
	}
}
